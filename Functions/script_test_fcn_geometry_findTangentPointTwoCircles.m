% script_test_fcn_geometry_findTangentPointTwoCircles
% Tests fcn_geometry_findTangentPointTwoCircles

% Revision history:
%      2021_04_25:
%      -- first write of the code copying functionality from fcn_FastestTraversal_checkInputsToFunctions


%% BASIC example - find the points for two circle, all inner
fig_num = 1;
centers_start = [1 1];
centers_end   = [3 1];
radii_start   = [0.5]; %#ok<*NBRAK>
radii_end     = [0.3];
cross_products_start = [ 1];
cross_products_end   = [-1];

[...
    points_tangent_start, ...
    points_tangent_end] ...
    = ...
    fcn_geometry_findTangentPointTwoCircles(...
    centers_start,...
    centers_end,...
    radii_start,...
    radii_end,...
    cross_products_start,...
    cross_products_end,...
    fig_num) %#ok<*NOPTS,*ASGLU>

assert(isequal(round(points_tangent_start,4),[1.2000,0.5417]));
assert(isequal(round(points_tangent_end,4),[2.8800,1.2750]));

%% Test of fast implementation mode 

% Perform the calculation in slow mode
fig_num = [];
REPS = 100; minTimeSlow = Inf; 
tic;
for i=1:REPS
    tstart = tic;
    [...
    points_tangent_start, ...
    points_tangent_end] ...
    = ...
    fcn_geometry_findTangentPointTwoCircles(...
    centers_start,...
    centers_end,...
    radii_start,...
    radii_end,...
    cross_products_start,...
    cross_products_end,...
    (fig_num));
    telapsed = toc(tstart);
    minTimeSlow = min(telapsed,minTimeSlow);
end
averageTimeSlow = toc/REPS;

% Perform the operation in fast mode
fig_num = -1;
minTimeFast = Inf; nsum = 10;
tic;
for i=1:REPS
    tstart = tic;
    [...
    points_tangent_start, ...
    points_tangent_end] ...
    = ...
    fcn_geometry_findTangentPointTwoCircles(...
    centers_start,...
    centers_end,...
    radii_start,...
    radii_end,...
    cross_products_start,...
    cross_products_end,...
    (fig_num));
    telapsed = toc(tstart);
    minTimeFast = min(telapsed,minTimeFast);
end
averageTimeFast = toc/REPS;

fprintf(1,'\n\nComparison of fast and slow modes of fcn_geometry_fitVectorToNPoints:\n');
fprintf(1,'N repetitions: %.0d\n',REPS);
fprintf(1,'Slow mode average speed per call (seconds): %.5f\n',averageTimeSlow);
fprintf(1,'Slow mode fastest speed over all calls (seconds): %.5f\n',minTimeSlow);
fprintf(1,'Fast mode average speed per call (seconds): %.5f\n',averageTimeFast);
fprintf(1,'Fast mode fastest speed over all calls (seconds): %.5f\n',minTimeFast);
fprintf(1,'Average ratio of fast mode to slow mode (unitless): %.3f\n',averageTimeSlow/averageTimeFast);
fprintf(1,'Fastest ratio of fast mode to slow mode (unitless): %.3f\n',minTimeSlow/minTimeFast);


%% BASIC example - find the points for two circle, all inner, opposite cross
fig_num = 2;
centers_start = [1 1];
centers_end   = [3 1];
radii_start   = [0.5];
radii_end     = [0.3];
cross_products_start = [-1];
cross_products_end   = [ 1];

[...
    points_tangent_start, ...
    points_tangent_end] ...
    = ...
    fcn_geometry_findTangentPointTwoCircles(...
    centers_start,...
    centers_end,...
    radii_start,...
    radii_end,...
    cross_products_start,...
    cross_products_end,...
    fig_num)

%% BASIC example -
% find the points for two circles, equal radii, outer, positive cross
fig_num = 3;
centers_start = [1 1];
centers_end   = [3 1];
radii_start   = [0.5];
radii_end     = [0.5];
cross_products_start = [1];
cross_products_end   = [1];

[...
    points_tangent_start, ...
    points_tangent_end] ...
    = ...
    fcn_geometry_findTangentPointTwoCircles(...
    centers_start,...
    centers_end,...
    radii_start,...
    radii_end,...
    cross_products_start,...
    cross_products_end,...
    fig_num)

%% BASIC example -
% find the points for two circles, equal radii, outer, negative cross
fig_num = 4;
centers_start = [1 1];
centers_end   = [3 1];
radii_start   = [0.5];
radii_end     = [0.5];
cross_products_start = [-1];
cross_products_end   = [-1];

[...
    points_tangent_start, ...
    points_tangent_end] ...
    = ...
    fcn_geometry_findTangentPointTwoCircles(...
    centers_start,...
    centers_end,...
    radii_start,...
    radii_end,...
    cross_products_start,...
    cross_products_end,...
    fig_num);


%% BASIC example -
% find the points for two circles, equal radii, outer, positive cross
% vertical orientation
fig_num = 5;
centers_start = [1 1];
centers_end   = [1 3];
radii_start   = [0.5];
radii_end     = [0.5];
cross_products_start = [1];
cross_products_end   = [1];

[...
    points_tangent_start, ...
    points_tangent_end] ...
    = ...
    fcn_geometry_findTangentPointTwoCircles(...
    centers_start,...
    centers_end,...
    radii_start,...
    radii_end,...
    cross_products_start,...
    cross_products_end,...
    fig_num)


%% BASIC example -
% find the points for two circles, equal radii, outer, positive cross
% vertical orientation
fig_num = 6;
centers_start = [1 3];
centers_end   = [1 1];
radii_start   = [0.5];
radii_end     = [0.5];
cross_products_start = [1];
cross_products_end   = [1];

[...
    points_tangent_start, ...
    points_tangent_end] ...
    = ...
    fcn_geometry_findTangentPointTwoCircles(...
    centers_start,...
    centers_end,...
    radii_start,...
    radii_end,...
    cross_products_start,...
    cross_products_end,...
    fig_num)

%% BASIC example -
% find the points for two circles, equal radii, outer, positive cross
% negative horizontal orientation
fig_num = 7;
centers_start = [3 1];
centers_end   = [1 1];
radii_start   = [0.5];
radii_end     = [0.5];
cross_products_start = [1];
cross_products_end   = [1];

[...
    points_tangent_start, ...
    points_tangent_end] ...
    = ...
    fcn_geometry_findTangentPointTwoCircles(...
    centers_start,...
    centers_end,...
    radii_start,...
    radii_end,...
    cross_products_start,...
    cross_products_end,...
    fig_num)



%% BASIC example -
% find the points for two circles, unequal radii, outer, positive cross,
% start circle larger than end circle
fig_num = 8;
centers_start = [1 1];
centers_end   = [3 1];
radii_start   = [0.5];
radii_end     = [0.3];
cross_products_start = [1];
cross_products_end   = [1];

[...
    points_tangent_start, ...
    points_tangent_end] ...
    = ...
    fcn_geometry_findTangentPointTwoCircles(...
    centers_start,...
    centers_end,...
    radii_start,...
    radii_end,...
    cross_products_start,...
    cross_products_end,...
    fig_num)

%% BASIC example -
% find the points for two circles, unequal radii, outer, positive cross
% start circle smaller than end circle
fig_num = 9;
centers_start = [1 1];
centers_end   = [3 1];
radii_start   = [0.3];
radii_end     = [0.5];
cross_products_start = [1];
cross_products_end   = [1];

[...
    points_tangent_start, ...
    points_tangent_end] ...
    = ...
    fcn_geometry_findTangentPointTwoCircles(...
    centers_start,...
    centers_end,...
    radii_start,...
    radii_end,...
    cross_products_start,...
    cross_products_end,...
    fig_num)



%% ADVANCED example - find the points for three circle, all inner
fig_num = 11;
centers_start = [1 1; 3 1];
centers_end   = [3 1; 5 2];
radii_start   = [0.5; 0.3];
radii_end     = [0.3; 0.8];
cross_products_start = [-1; 1];
cross_products_end = [1; -1];

[...
    points_tangent_start, ...
    points_tangent_end] ...
    = ...
    fcn_geometry_findTangentPointTwoCircles(...
    centers_start,...
    centers_end,...
    radii_start,...
    radii_end,...
    cross_products_start,...
    cross_products_end,...
    fig_num);


%% BASIC example -
% find the points for three circles, two outside, last inside, but where
% the inside ones are equal radii
fig_num = 21;
centers_start = [1 1; 3 1];
centers_end   = [3 1; 5 2];
radii_start   = [0.5; 0.3];
radii_end     = [0.3; 0.3];
cross_products_start = [1; 1];
cross_products_end = [1; -1];

[...
    points_tangent_start, ...
    points_tangent_end] ...
    = ...
    fcn_geometry_findTangentPointTwoCircles(...
    centers_start,...
    centers_end,...
    radii_start,...
    radii_end,...
    cross_products_start,...
    cross_products_end,...
    fig_num);

%% BASIC example -
% find the points for three circles, two outside, last inside, but where
% all are equal radii
fig_num = 22;
centers_start = [1 1; 3 1];
centers_end   = [3 1; 5 2];
radii_start   = [0.3; 0.3];
radii_end     = [0.3; 0.3];
cross_products_start = [-1; -1];
cross_products_end = [-1; 1];

[...
    points_tangent_start, ...
    points_tangent_end] ...
    = ...
    fcn_geometry_findTangentPointTwoCircles(...
    centers_start,...
    centers_end,...
    radii_start,...
    radii_end,...
    cross_products_start,...
    cross_products_end,...
    fig_num);

%% Fail cases


if 1==0
    %% FAIL CASE example -
    % find the points for two circles, unequal radii, outer, zero cross
    % start circle within end circle (criteria is that cross product NOT
    % zero)
    fig_num = 91;
    centers_start = [1 1];
    centers_end   = [3 1];
    radii_start   = [2.6];
    radii_end     = [0.5];
    cross_products_start = [0];
    cross_products_end   = [1];

    [...
        points_tangent_start, ...
        points_tangent_end] ...
        = ...
        fcn_geometry_findTangentPointTwoCircles(...
        centers_start,...
        centers_end,...
        radii_start,...
        radii_end,...
        cross_products_start,...
        cross_products_end,...
        fig_num)

    %% FAIL CASE example -
    % find the points for two circles, unequal radii, outer, positive cross
    % start circle within end circle (criteria is that abs(r1 - r2)<= D,
    % where D is distance between centers)
    fig_num = 91;
    centers_start = [1 1];
    centers_end   = [3 1];
    radii_start   = [2.6];
    radii_end     = [0.5];
    cross_products_start = [1];
    cross_products_end   = [1];

    [...
        points_tangent_start, ...
        points_tangent_end] ...
        = ...
        fcn_geometry_findTangentPointTwoCircles(...
        centers_start,...
        centers_end,...
        radii_start,...
        radii_end,...
        cross_products_start,...
        cross_products_end,...
        fig_num)

    %% FAIL CASE example -
    % find the points for two circles, unequal radii, inner, circles too
    % close together (criteria is that r1+r2 <= D, where D is distance
    % between centers)

    fig_num = 92;
    centers_start = [1 1];
    centers_end   = [3 1];
    radii_start   = [1];
    radii_end     = [1.1];
    cross_products_start = [1];
    cross_products_end   = [-1];

    [...
        points_tangent_start, ...
        points_tangent_end] ...
        = ...
        fcn_geometry_findTangentPointTwoCircles(...
        centers_start,...
        centers_end,...
        radii_start,...
        radii_end,...
        cross_products_start,...
        cross_products_end,...
        fig_num)

end

